openapi: 3.0.3
info:
  title: Task Execution Service API
  description: |
    API for the Task Execution Service Service, which is responsible for executing
    individual tasks within workflows.
  version: 1.0.0
  contact:
    name: Platform Team
    email: platform-team@example.com

servers:
  - url: https://api.example.com/api/v1
    description: Production API server
  - url: https://api.staging.example.com/api/v1
    description: Staging API server

tags:
  - name: Tasks
    description: Task management operations
  - name: Task Definitions
    description: Task definition operations

paths:
  /tasks:
    post:
      summary: Submit a new task for execution
      description: Creates a new task instance and submits it for execution
      operationId: submitTask
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSubmissionRequest'
      responses:
        '201':
          description: Task successfully submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSubmissionResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Task validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List tasks
      description: Returns a list of tasks based on filter criteria
      operationId: listTasks
      tags:
        - Tasks
      parameters:
        - name: status
          in: query
          description: Filter by task status
          schema:
            type: string
            enum: [PENDING, ASSIGNED, RUNNING, COMPLETED, FAILED, CANCELLED, TIMED_OUT]
        - name: type
          in: query
          description: Filter by task type
          schema:
            type: string
            enum: [AUTOMATED, MANUAL, INTEGRATION]
        - name: workflowInstanceId
          in: query
          description: Filter by workflow instance ID
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{taskId}:
    get:
      summary: Get task details
      description: Retrieves the current status and details of a task
      operationId: getTask
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetailResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{taskId}/cancel:
    post:
      summary: Cancel a task
      description: Cancels a running or pending task
      operationId: cancelTask
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to cancel
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCancellationRequest'
      responses:
        '200':
          description: Task successfully cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCancellationResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Task cannot be cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{taskId}/complete:
    post:
      summary: Complete a manual task
      description: Completes a manual task with the provided output
      operationId: completeManualTask
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to complete
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCompletionRequest'
      responses:
        '200':
          description: Task successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCompletionResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Output validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/definitions:
    get:
      summary: List task definitions
      description: Returns a list of available task definitions
      operationId: listTaskDefinitions
      tags:
        - Task Definitions
      parameters:
        - name: type
          in: query
          description: Filter by task type
          schema:
            type: string
            enum: [AUTOMATED, MANUAL, INTEGRATION]
        - name: search
          in: query
          description: Text search across name and description fields
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of task definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDefinitionListResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/definitions/{definitionId}:
    get:
      summary: Get task definition details
      description: Retrieves a specific task definition
      operationId: getTaskDefinition
      tags:
        - Task Definitions
      parameters:
        - name: definitionId
          in: path
          required: true
          description: ID of the task definition to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Task definition details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDefinitionDetailResponse'
        '404':
          description: Task definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    TaskSubmissionRequest:
      type: object
      required:
        - taskDefinitionId
        - input
      properties:
        taskDefinitionId:
          type: string
          description: ID of the task definition to execute
        workflowInstanceId:
          type: string
          description: ID of the parent workflow instance (if any)
        input:
          type: object
          description: Input data for the task
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, CRITICAL]
          default: MEDIUM
          description: Task priority
        executionConfig:
          type: object
          description: Optional execution configuration overrides
          properties:
            timeout:
              type: integer
              description: Maximum execution time in milliseconds
            retryPolicy:
              $ref: '#/components/schemas/RetryPolicy'

    TaskSubmissionResponse:
      type: object
      required:
        - id
        - status
        - createdAt
      properties:
        id:
          type: string
          description: Unique identifier for the task instance
        status:
          type: string
          enum: [PENDING, ASSIGNED, RUNNING, COMPLETED, FAILED, CANCELLED, TIMED_OUT]
          description: Current status of the task
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the task was created

    TaskDetailResponse:
      type: object
      required:
        - id
        - taskDefinitionId
        - status
        - type
        - input
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the task instance
        taskDefinitionId:
          type: string
          description: ID of the task definition
        workflowInstanceId:
          type: string
          description: ID of the parent workflow instance (if any)
        status:
          type: string
          enum: [PENDING, ASSIGNED, RUNNING, COMPLETED, FAILED, CANCELLED, TIMED_OUT]
          description: Current status of the task
        type:
          type: string
          enum: [AUTOMATED, MANUAL, INTEGRATION]
          description: Type of task
        input:
          type: object
          description: Input data provided for execution
        output:
          type: object
          description: Output data produced by execution
        error:
          $ref: '#/components/schemas/ErrorInfo'
        executorId:
          type: string
          description: ID of the executor handling this task
        assignee:
          type: string
          description: For manual tasks, the assigned user
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, CRITICAL]
          description: Task priority
        retryCount:
          type: integer
          description: Number of retry attempts
        executionMetadata:
          type: object
          properties:
            startTime:
              type: string
              format: date-time
              description: When task execution started
            endTime:
              type: string
              format: date-time
              description: When task execution ended
            duration:
              type: integer
              description: Execution duration in milliseconds
            executionEnvironment:
              type: string
              description: Environment where task was executed
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the task was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the task was last updated

    TaskListResponse:
      type: object
      required:
        - items
        - pagination
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the task instance
              taskDefinitionId:
                type: string
                description: ID of the task definition
              status:
                type: string
                enum: [PENDING, ASSIGNED, RUNNING, COMPLETED, FAILED, CANCELLED, TIMED_OUT]
                description: Current status of the task
              type:
                type: string
                enum: [AUTOMATED, MANUAL, INTEGRATION]
                description: Type of task
              createdAt:
                type: string
                format: date-time
                description: Timestamp when the task was created
              updatedAt:
                type: string
                format: date-time
                description: Timestamp when the task was last updated
        pagination:
          type: object
          properties:
            page:
              type: integer
              description: Current page number
            limit:
              type: integer
              description: Items per page
            totalItems:
              type: integer
              description: Total number of items
            totalPages:
              type: integer
              description: Total number of pages

    TaskCancellationRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          description: Reason for cancellation
        force:
          type: boolean
          default: false
          description: Whether to force cancellation

    TaskCancellationResponse:
      type: object
      required:
        - id
        - status
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the task instance
        status:
          type: string
          enum: [CANCELLED]
          description: Current status of the task
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the task was updated

    TaskCompletionRequest:
      type: object
      required:
        - output
      properties:
        output:
          type: object
          description: Output data for the task

    TaskCompletionResponse:
      type: object
      required:
        - id
        - status
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the task instance
        status:
          type: string
          enum: [COMPLETED]
          description: Current status of the task
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the task was updated

    TaskDefinitionListResponse:
      type: object
      required:
        - items
        - pagination
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the task definition
              name:
                type: string
                description: Human-readable name
              description:
                type: string
                description: Detailed description
              type:
                type: string
                enum: [AUTOMATED, MANUAL, INTEGRATION]
                description: Type of task
              version:
                type: string
                description: Semantic version
        pagination:
          type: object
          properties:
            page:
              type: integer
              description: Current page number
            limit:
              type: integer
              description: Items per page
            totalItems:
              type: integer
              description: Total number of items
            totalPages:
              type: integer
              description: Total number of pages

    TaskDefinitionDetailResponse:
      type: object
      required:
        - id
        - name
        - description
        - type
        - version
        - inputSchema
        - outputSchema
        - timeout
        - executionConfig
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the task definition
        name:
          type: string
          description: Human-readable name
        description:
          type: string
          description: Detailed description
        type:
          type: string
          enum: [AUTOMATED, MANUAL, INTEGRATION]
          description: Type of task
        version:
          type: string
          description: Semantic version
        inputSchema:
          type: object
          description: JSON Schema for input validation
        outputSchema:
          type: object
          description: JSON Schema for output validation
        timeout:
          type: integer
          description: Maximum execution time in milliseconds
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
        executionConfig:
          type: object
          description: Configuration for execution
          properties:
            executor:
              type: string
              description: Executor to use
            securityContext:
              type: object
              properties:
                securityLevel:
                  type: string
                  enum: [LOW, MEDIUM, HIGH]
                  description: Security level
            resourceRequirements:
              type: object
              properties:
                cpu:
                  type: string
                  description: CPU requirements
                memory:
                  type: string
                  description: Memory requirements
                timeoutSeconds:
                  type: integer
                  description: Execution timeout in seconds
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the definition was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the definition was last updated

    RetryPolicy:
      type: object
      required:
        - maxRetries
        - retryInterval
        - backoffMultiplier
      properties:
        maxRetries:
          type: integer
          description: Maximum number of retry attempts
        retryInterval:
          type: integer
          description: Base interval between retries (ms)
        backoffMultiplier:
          type: number
          description: Multiplier for exponential backoff
        maxRetryInterval:
          type: integer
          description: Maximum retry interval (ms)
        retryableErrors:
          type: array
          items:
            type: string
          description: Error codes that trigger retries

    ErrorInfo:
      type: object
      required:
        - code
        - message
        - timestamp
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        stackTrace:
          type: string
          description: Stack trace (for development)
        timestamp:
          type: string
          format: date-time
          description: When the error occurred

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error details

security:
  - bearerAuth: []
  - apiKeyAuth: [] 