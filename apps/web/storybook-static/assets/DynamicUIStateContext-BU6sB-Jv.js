import{j as U}from"./jsx-runtime-CmtfZKef.js";import{r as e}from"./index-Dm8qopDP.js";const u=e.createContext(null),i=({children:t,initialState:a={}})=>{const[o,n]=e.useState(a),m=e.useCallback(r=>{n(s=>({...s,...r}))},[]),p=e.useCallback((r,s)=>{n(_=>({..._,[r]:s}))},[]),I=e.useCallback(()=>{n(a)},[a]),y=e.useCallback(r=>o[r],[o]),l={uiState:o,updateUIState:m,setUIState:p,resetUIState:I,getUIState:y};return U.jsx(u.Provider,{value:l,children:t})},c=()=>{const t=e.useContext(u);if(!t)throw new Error("useDynamicUIState must be used within a DynamicUIStateProvider");return t},d=t=>{const{uiState:a}=c();return{...t,uiState:a}};try{i.displayName="DynamicUIStateProvider",i.__docgenInfo={description:`Provider for Dynamic UI state management
Manages conditional rendering state for Dynamic UI components`,displayName:"DynamicUIStateProvider",props:{}}}catch{}try{c.displayName="useDynamicUIState",c.__docgenInfo={description:`Hook to use Dynamic UI state
Must be used within a DynamicUIStateProvider`,displayName:"useDynamicUIState",props:{}}}catch{}try{d.displayName="useUIStateData",d.__docgenInfo={description:`Hook to get UI state for conditional rendering
Returns a data object that includes both regular data and uiState`,displayName:"useUIStateData",props:{}}}catch{}export{i as D,d as a,c as u};
